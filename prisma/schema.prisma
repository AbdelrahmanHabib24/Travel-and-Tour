generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 🟢 حزم الرحلات
model Package {
  id                 Int       @id @default(autoincrement())
  URL                String
  title1             String
  title2             String
  price              Float
  duration           String
  des                String
  rating             Float
  count              Int
  ageRange           String?
  maxGroupSize       Int?
  travelDuration     String?
  startTimeInfo      String?
  mobileTicket       Boolean
  liveGuideLanguages String[]
  
  images   Image[]
  comments Comment[]
  orders   Order[]
}

// 🟢 صور الحزم
model Image {
  id        Int     @id @default(autoincrement())
  url       String
  packageId Int
  package   Package @relation(fields: [packageId], references: [id])
}

// 🟢 تعليقات المستخدمين على الحزم
model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  userName  String
  avatarUrl String?
  packageId Int
  package   Package  @relation(fields: [packageId], references: [id])
}

// 🟢 مستخدمين
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  
  orders Order[]
}

// 🟢 الطلبات
model Order {
  id          Int      @id @default(autoincrement())
  amountCents Int
  currency    String
  paymobId    Int?
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  packageId Int
  package   Package @relation(fields: [packageId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  payments Payment[]
  sessions PaymentSession[]
}

// 🟢 عمليات الدفع (Payment)
model Payment {
  id         Int      @id @default(autoincrement())
  orderId    Int
  paymentKey String
  status     String   @default("initialized")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  order Order @relation(fields: [orderId], references: [id])
}

// 🟢 جلسة الدفع (PaymentSession)
model PaymentSession {
  id           String   @id @default(cuid())
  paymentToken String
  createdAt    DateTime @default(now())
  orderId      Int
  order        Order @relation(fields: [orderId], references: [id])
   amount       Int?  
}
